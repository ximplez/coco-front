---
name: Release

permissions:
  contents: write

# 触发条件
on:
  workflow_dispatch:
  push:
    branches:
      - 'dev/**'
      - 'release/**'
    tags:
      - 'v**'

env:
  BUILD_ENV: prod

jobs:
  git-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - run: npx githublogen
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            Release.txt
            LICENSE
  docker-release:
    # 运行环境
    runs-on: ubuntu-latest
    # 运行步骤
    steps:
      - uses: actions/checkout@v3
      - name: Checkout secret
        uses: actions/checkout@v4
        with:
          repository: ximplez/secret
          token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT
          path: secret
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      # 里面会填充 env.REGISTRY
      - name: Log into registry
        if: github.event_name != 'pull_request'
        uses: ximplez/docker-login-action@master
        with:
          configPath: secret/common/docker_registry.json
          configKey: Ali-shenzhen

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=match,pattern=v(.*),group=1
            type=raw,value=latest,enable=true
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            - BUILD_ENV=${{ env.BUILD_ENV }}

  deploy:
    needs: docker-release

    # 运行环境
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    # 运行步骤
    steps:
      - uses: actions/checkout@v4
      - name: Checkout secret
        uses: actions/checkout@v4
        with:
          repository: ximplez/secret
          token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT
          path: secret
      - name: ready deploy
        run: |
          pwd
          mkdir deploy
          cp -r secret/coco-front/deploy_config.json deploy/
          cp -r secret/common/* deploy/
          ls -l deploy
        # 部署到服务器
      - name: deploy
        uses: ximplez/ssh-deploy@main
        env:
          DEPLOY_CONFIG_PATH: deploy/deploy_config.json
          SSH_CMD_CONFIG_PATH: deploy/ssh_cmd.json
#
